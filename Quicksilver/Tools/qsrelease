#!/bin/sh

set -euf

cleanup() {
  rm -f "${SETTINGS}"
}
trap cleanup EXIT

# Allow users to pass in a custom signing identity name for testing with
# self-signed certs
SIGNING_IDENTITY=${SIGNING_IDENTITY:-"Developer ID Application"}

## Quicksilver Release build
## Cache settings to save time
SETTINGS=/tmp/qs_build_settings
xcodebuild -configuration Release \
  -scheme 'Quicksilver Distribution' \
  -showBuildSettings |
  sort -u > "${SETTINGS}"

SOURCE_ROOT=$(awk '$1 == "SOURCE_ROOT" { print $NF }' < "${SETTINGS}")
BUILT_PRODUCTS_DIR=$(awk '$1 == "BUILT_PRODUCTS_DIR" { print $NF }' < "${SETTINGS}")
QS_INFO_VERSION=$(awk '$1 == "QS_INFO_VERSION" { print $NF }' < "${SETTINGS}")

## Create the directory (for logging purposes)
mkdir -p "${BUILT_PRODUCTS_DIR}"
LOG=${BUILT_PRODUCTS_DIR}/build.log
DMG_TEMP=${BUILT_PRODUCTS_DIR}/dmg

## Clean and Build
## (This could be done with a single command, but if `clean` fails, the
## exit status won't be 0. It usually fails because something didn't exist
## in the first place. We don't care.)
# xcodebuild -configuration Debug -scheme 'Quicksilver' test > $LOG
xcodebuild -scheme 'Quicksilver Distribution' test > "${LOG}" || true
xcodebuild -configuration Release -scheme 'Quicksilver Distribution' clean >> "${LOG}" || true
xcodebuild -configuration Release -scheme 'Quicksilver Distribution' build >> "${LOG}"

## Build succeeded
cd "${BUILT_PRODUCTS_DIR}"

## Set the correct plist permissions
chmod 644 Quicksilver.app/Contents/Info.plist

## Sign for Gatekeeper
codesign --sign "${SIGNING_IDENTITY}" Quicksilver.app/Contents/Frameworks/*.framework
codesign --sign "${SIGNING_IDENTITY}" Quicksilver.app/Contents/PlugIns/*.qsplugin
codesign --sign "${SIGNING_IDENTITY}" Quicksilver.app/Contents/Resources/QSDroplet.app
codesign --sign "${SIGNING_IDENTITY}" Quicksilver.app/Contents/Library/Automator/*.action
codesign --sign "${SIGNING_IDENTITY}" Quicksilver.app/Contents/Resources/*.plist
codesign --sign "${SIGNING_IDENTITY}" Quicksilver.app/Contents/Info.plist
codesign --sign "${SIGNING_IDENTITY}" Quicksilver.app

## Package it in a disk image
mkdir -p "${DMG_TEMP}"
cp -a Quicksilver.app "${DMG_TEMP}"
cp "${SOURCE_ROOT}"/Resources/DMG_DS_Store "${DMG_TEMP}"/.DS_Store
cd "${DMG_TEMP}"
ln -s /Applications .
"${SOURCE_ROOT}"/Tools/buildDMG.pl \
  -dmgName Quicksilver \
  -volName Quicksilver \
  -volIcon "${SOURCE_ROOT}"/Resources/Images/QuicksilverDMG.icns \
  -compressionLevel 9 \
  .DS_Store Quicksilver.app Applications \
  >> "${LOG}"

codesign --sign "${SIGNING_IDENTITY}" Quicksilver.dmg
mv Quicksilver.dmg "../Quicksilver ${QS_INFO_VERSION}".dmg
cd ..

## Easy access to plist
cp Quicksilver.app/Contents/Info.plist "${BUILT_PRODUCTS_DIR}"

## Show the folder
open "${BUILT_PRODUCTS_DIR}"

## Verify app and DMG signing
codesign --verify --deep --strict --verbose=1 Quicksilver.app
spctl -avt open --context context:primary-signature "Quicksilver ${QS_INFO_VERSION}.dmg"
